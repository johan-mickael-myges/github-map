import { z } from "zod";
export declare const isSendLocalChatMessageOptions: z.ZodObject<{
    scope: z.ZodLiteral<"local">;
    author: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    author?: string | undefined;
    scope: "local";
}, {
    author?: string | undefined;
    scope: "local";
}>;
export declare const isSendBubbleChatMessageOptions: z.ZodObject<{
    scope: z.ZodLiteral<"bubble">;
}, "strip", z.ZodTypeAny, {
    scope: "bubble";
}, {
    scope: "bubble";
}>;
export declare const isSendChatMessageOptions: z.ZodUnion<[z.ZodObject<{
    scope: z.ZodLiteral<"local">;
    author: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    author?: string | undefined;
    scope: "local";
}, {
    author?: string | undefined;
    scope: "local";
}>, z.ZodObject<{
    scope: z.ZodLiteral<"bubble">;
}, "strip", z.ZodTypeAny, {
    scope: "bubble";
}, {
    scope: "bubble";
}>]>;
export declare const isChatEvent: z.ZodObject<{
    message: z.ZodString;
    options: z.ZodUnion<[z.ZodObject<{
        scope: z.ZodLiteral<"local">;
        author: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        author?: string | undefined;
        scope: "local";
    }, {
        author?: string | undefined;
        scope: "local";
    }>, z.ZodObject<{
        scope: z.ZodLiteral<"bubble">;
    }, "strip", z.ZodTypeAny, {
        scope: "bubble";
    }, {
        scope: "bubble";
    }>]>;
}, "strip", z.ZodTypeAny, {
    message: string;
    options: {
        author?: string | undefined;
        scope: "local";
    } | {
        scope: "bubble";
    };
}, {
    message: string;
    options: {
        author?: string | undefined;
        scope: "local";
    } | {
        scope: "bubble";
    };
}>;
export declare const isAuthor: z.ZodObject<{
    name: z.ZodString;
    active: z.ZodBoolean;
    isMe: z.ZodBoolean;
    jid: z.ZodString;
    isMember: z.ZodBoolean;
    color: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    color?: string | undefined;
    name: string;
    active: boolean;
    isMe: boolean;
    jid: string;
    isMember: boolean;
}, {
    color?: string | undefined;
    name: string;
    active: boolean;
    isMe: boolean;
    jid: string;
    isMember: boolean;
}>;
export declare enum ChatMessageTypes {
    text = 1,
    me = 2,
    userIncoming = 3,
    userOutcoming = 4,
    userWriting = 5,
    userStopWriting = 6
}
export declare const isChatMessageTypes: z.ZodNativeEnum<typeof ChatMessageTypes>;
export declare const isChatMessage: z.ZodObject<{
    type: z.ZodNativeEnum<typeof ChatMessageTypes>;
    date: z.ZodDate;
    author: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        name: z.ZodString;
        active: z.ZodBoolean;
        isMe: z.ZodBoolean;
        jid: z.ZodString;
        isMember: z.ZodBoolean;
        color: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        color?: string | undefined;
        name: string;
        active: boolean;
        isMe: boolean;
        jid: string;
        isMember: boolean;
    }, {
        color?: string | undefined;
        name: string;
        active: boolean;
        isMe: boolean;
        jid: string;
        isMember: boolean;
    }>>>;
    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    targets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodNullable<z.ZodString>, "many">>>;
    text: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    author?: {
        color?: string | undefined;
        name: string;
        active: boolean;
        isMe: boolean;
        jid: string;
        isMember: boolean;
    } | null | undefined;
    text?: string[] | null | undefined;
    name?: string | null | undefined;
    targets?: (string | null)[] | null | undefined;
    type: ChatMessageTypes;
    date: Date;
}, {
    author?: {
        color?: string | undefined;
        name: string;
        active: boolean;
        isMe: boolean;
        jid: string;
        isMember: boolean;
    } | null | undefined;
    text?: string[] | null | undefined;
    name?: string | null | undefined;
    targets?: (string | null)[] | null | undefined;
    type: ChatMessageTypes;
    date: Date;
}>;
export type ChatMessage = z.infer<typeof isChatMessage>;
/**
 * A message sent from the iFrame to the game to add a message in the chat.
 */
export type ChatEvent = z.infer<typeof isChatEvent>;
export type SendLocalChatMessageOptions = z.infer<typeof isSendLocalChatMessageOptions>;
export type SendBubbleChatMessageOptions = z.infer<typeof isSendBubbleChatMessageOptions>;
export type SendChatMessageOptions = z.infer<typeof isSendChatMessageOptions>;
