import { z } from "zod";
export declare const isReceiveEventEvent: z.ZodObject<{
    name: z.ZodString;
    data: z.ZodUnknown;
    senderId: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    data?: unknown;
    senderId?: number | undefined;
    name: string;
}, {
    data?: unknown;
    senderId?: number | undefined;
    name: string;
}>;
export declare const isReceiveEventIframeEvent: z.ZodObject<{
    type: z.ZodLiteral<"receiveEvent">;
    data: z.ZodObject<{
        name: z.ZodString;
        data: z.ZodUnknown;
        senderId: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        data?: unknown;
        senderId?: number | undefined;
        name: string;
    }, {
        data?: unknown;
        senderId?: number | undefined;
        name: string;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "receiveEvent";
    data: {
        data?: unknown;
        senderId?: number | undefined;
        name: string;
    };
}, {
    type: "receiveEvent";
    data: {
        data?: unknown;
        senderId?: number | undefined;
        name: string;
    };
}>;
/**
 * A message sent to dispatch an event to/from the iFrame
 */
export type ReceiveEventEvent = z.infer<typeof isReceiveEventEvent>;
