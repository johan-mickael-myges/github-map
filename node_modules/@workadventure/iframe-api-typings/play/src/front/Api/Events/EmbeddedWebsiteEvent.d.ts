import { z } from "zod";
export declare const isRectangle: z.ZodObject<{
    x: z.ZodNumber;
    y: z.ZodNumber;
    width: z.ZodNumber;
    height: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    height: number;
    width: number;
    x: number;
    y: number;
}, {
    height: number;
    width: number;
    x: number;
    y: number;
}>;
export type Rectangle = z.infer<typeof isRectangle>;
export declare const isEmbeddedWebsiteEvent: z.ZodObject<{
    name: z.ZodString;
    url: z.ZodOptional<z.ZodString>;
    visible: z.ZodOptional<z.ZodBoolean>;
    allowApi: z.ZodOptional<z.ZodBoolean>;
    allow: z.ZodOptional<z.ZodString>;
    x: z.ZodOptional<z.ZodNumber>;
    y: z.ZodOptional<z.ZodNumber>;
    width: z.ZodOptional<z.ZodNumber>;
    height: z.ZodOptional<z.ZodNumber>;
    origin: z.ZodOptional<z.ZodEnum<["player", "map"]>>;
    scale: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    url?: string | undefined;
    height?: number | undefined;
    width?: number | undefined;
    x?: number | undefined;
    y?: number | undefined;
    allowApi?: boolean | undefined;
    visible?: boolean | undefined;
    allow?: string | undefined;
    origin?: "map" | "player" | undefined;
    scale?: number | undefined;
    name: string;
}, {
    url?: string | undefined;
    height?: number | undefined;
    width?: number | undefined;
    x?: number | undefined;
    y?: number | undefined;
    allowApi?: boolean | undefined;
    visible?: boolean | undefined;
    allow?: string | undefined;
    origin?: "map" | "player" | undefined;
    scale?: number | undefined;
    name: string;
}>;
/**
 * A message sent from the iFrame to the game to modify an embedded website
 */
export type ModifyEmbeddedWebsiteEvent = z.infer<typeof isEmbeddedWebsiteEvent>;
export declare const isCreateEmbeddedWebsiteEvent: z.ZodObject<{
    name: z.ZodString;
    url: z.ZodString;
    position: z.ZodObject<{
        x: z.ZodNumber;
        y: z.ZodNumber;
        width: z.ZodNumber;
        height: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        height: number;
        width: number;
        x: number;
        y: number;
    }, {
        height: number;
        width: number;
        x: number;
        y: number;
    }>;
    visible: z.ZodOptional<z.ZodBoolean>;
    allowApi: z.ZodOptional<z.ZodBoolean>;
    allow: z.ZodOptional<z.ZodString>;
    origin: z.ZodOptional<z.ZodEnum<["player", "map"]>>;
    scale: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    allowApi?: boolean | undefined;
    visible?: boolean | undefined;
    allow?: string | undefined;
    origin?: "map" | "player" | undefined;
    scale?: number | undefined;
    url: string;
    name: string;
    position: {
        height: number;
        width: number;
        x: number;
        y: number;
    };
}, {
    allowApi?: boolean | undefined;
    visible?: boolean | undefined;
    allow?: string | undefined;
    origin?: "map" | "player" | undefined;
    scale?: number | undefined;
    url: string;
    name: string;
    position: {
        height: number;
        width: number;
        x: number;
        y: number;
    };
}>;
export type CreateEmbeddedWebsiteEvent = z.infer<typeof isCreateEmbeddedWebsiteEvent>;
