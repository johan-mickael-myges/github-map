import { z } from "zod";
export declare const isAddPlayerEvent: z.ZodObject<{
    playerId: z.ZodNumber;
    name: z.ZodString;
    userUuid: z.ZodString;
    availabilityStatus: z.ZodString;
    outlineColor: z.ZodOptional<z.ZodNumber>;
    position: z.ZodObject<{
        x: z.ZodNumber;
        y: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        x: number;
        y: number;
    }, {
        x: number;
        y: number;
    }>;
    variables: z.ZodMap<z.ZodString, z.ZodUnknown>;
}, "strip", z.ZodTypeAny, {
    outlineColor?: number | undefined;
    name: string;
    availabilityStatus: string;
    position: {
        x: number;
        y: number;
    };
    userUuid: string;
    variables: Map<string, unknown>;
    playerId: number;
}, {
    outlineColor?: number | undefined;
    name: string;
    availabilityStatus: string;
    position: {
        x: number;
        y: number;
    };
    userUuid: string;
    variables: Map<string, unknown>;
    playerId: number;
}>;
export declare const isRemotePlayerChangedEvent: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    outlineColor: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    availabilityStatus: z.ZodOptional<z.ZodString>;
    position: z.ZodOptional<z.ZodObject<{
        x: z.ZodNumber;
        y: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        x: number;
        y: number;
    }, {
        x: number;
        y: number;
    }>>;
    variables: z.ZodOptional<z.ZodMap<z.ZodString, z.ZodUnknown>>;
    playerId: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    outlineColor?: number | undefined;
    availabilityStatus?: string | undefined;
    position?: {
        x: number;
        y: number;
    } | undefined;
    variables?: Map<string, unknown> | undefined;
    playerId: number;
}, {
    name?: string | undefined;
    outlineColor?: number | undefined;
    availabilityStatus?: string | undefined;
    position?: {
        x: number;
        y: number;
    } | undefined;
    variables?: Map<string, unknown> | undefined;
    playerId: number;
}>;
/**
 * A message sent from the game to the iFrame to notify a new player arrived in our viewport
 */
export type AddPlayerEvent = z.infer<typeof isAddPlayerEvent>;
/**
 * A message sent from the game to the iFrame to notify a player has changed (moved / changed name, etc...)
 */
export type RemotePlayerChangedEvent = z.infer<typeof isRemotePlayerChangedEvent>;
