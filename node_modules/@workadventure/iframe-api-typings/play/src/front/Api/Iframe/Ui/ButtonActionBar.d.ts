import { AddButtonActionBarEvent } from "../../Events/Ui/ButtonActionBarEvent";
import { IframeApiContribution } from "../IframeApiContribution";
export type ButtonActionBarClickedCallback = (buttonActionBar: AddButtonActionBarEvent) => void;
declare const ActionBarButtonType: {
    readonly button: "button";
    readonly action: "action";
};
type ActionBarButtonType = (typeof ActionBarButtonType)[keyof typeof ActionBarButtonType];
export type ActionBarClassicButtonDescriptor = {
    id: string;
    label: string;
    type?: ActionBarButtonType;
    callback?: ButtonActionBarClickedCallback;
};
export type ActionBarActionButtonDescriptor = {
    id: string;
    type: ActionBarButtonType;
    imageSrc: string;
    toolTip: string;
    callback?: ButtonActionBarClickedCallback;
};
export declare class WorkAdventureButtonActionBarCommands extends IframeApiContribution<WorkAdventureButtonActionBarCommands> {
    private _callbacks;
    callbacks: {
        type: "buttonActionBarTrigger";
        callback: (event: {
            type: "button";
            label: string;
            id: string;
        } | {
            type: "action";
            id: string;
            imageSrc: string;
            toolTip: string;
        }) => void;
    }[];
    /**
     * Add action bar button
     * {@link http://workadventure.localhost/map-building/api-ui.md#add-action-bar | Website documentation}
     */
    addButton(descriptor: ActionBarClassicButtonDescriptor | ActionBarActionButtonDescriptor): void;
    /**
     * Remove action bar button
     * {@link http://workadventure.localhost/map-building/api-ui.md#remove-action-bar | Website documentation}
     */
    removeButton(id: string): void;
}
declare const _default: WorkAdventureButtonActionBarCommands;
export default _default;
